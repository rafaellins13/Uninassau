import java.util.Random;

public class Testequick {

	public static void main(String[] args) {
				
		Random random = new Random();
        int v[] = new int[10];

        System.out.println("Vetor Aleatório Gerado");
        for (int i=0; i<v.length; i++) {
             v[i] = random.nextInt(100);
             System.out.print(v[i] + " "); 
        }
        
        System.out.println(" ");
        
		int e = 0;
		int d = v.length-1;
		
		long tempoInicial = System.currentTimeMillis();

		//quick(v,e, d);
		//insertionSort(v);
		//selectionSort(v);
		//bubbleSort(v);
		
		System.out.println("O método foi executado em " + (System.currentTimeMillis() - tempoInicial) + "ms");
		
		System.out.println("Vetor Ordenado");
		for (int i=0; i<v.length; i++) {
            System.out.print(v[i] + " "); 
       }
		
		
		
}
		
	static void quick(int vet[], int esq, int dir){
	    int pivo = esq, i,ch,j;  
	    
	    for(i=esq+1;i<=dir;i++){        
	        j = i;                      
	        if(vet[j] < vet[pivo]){     
	            ch = vet[j];               
	            while(j > pivo){           
	                vet[j] = vet[j-1];      
	                j--;}
	            vet[j] = ch;               
	            pivo++;                    
	        }
	    }
	
	    if(pivo-1 >= esq){              
	        quick(vet,esq,pivo-1);}
	    if(pivo+1 <= dir){              
	        quick(vet,pivo+1,dir);}
	 }


public static void insertionSort(int[] values) {
	for (int i = 1; i < values.length; i++) { 
		
		int j = i;
	
		while (j > 0 && values[j] < values[j-1]) {
			int aux = values[j];
			values[j] = values[j - 1];
			values[j - 1] = aux;
			j -= 1;
		}
	
	}	
}

public static void selectionSort(int[] v) {	
	for (int i = 0; i < v.length; i++) {
		
		int i_menor = i;
		for (int j = i + 1; j < v.length; j++)
			if (v[j] < v[i_menor])
				i_menor = j;
		
		int aux = v[i];
		v[i] = v[i_menor];
		v[i_menor] = aux;
	
	}		
}

public static void bubbleSort(int[] v){

    boolean sortedList = false;
    while(!sortedList){
        sortedList = true;
        for(int i = 0; (i < v.length && i+1 < v.length); i++){
            if(v[i] > v[i+1]){
                int temp = v[i+1];
                v[i+1] = v[i];
                v[i] = temp;
                sortedList = false;
            }
        }
    }

}



}
